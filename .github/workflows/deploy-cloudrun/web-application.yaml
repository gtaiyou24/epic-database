apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ${NAME}
  #  namespace: ${PROJECT_NUMBER}
  annotations:
    run.googleapis.com/ingress: "internal-and-cloud-load-balancing"  # 上り（内向き）の制御を「内部+ロードバランシング」に設定
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/launch-stage: BETA
        autoscaling.knative.dev/minScale: "0"
        run.googleapis.com/startup-cpu-boost: 'true'  # 起動時の CPU ブーストを有効化
        run.googleapis.com/cpu-throttling: "false" # CPUの常時割り当て設定
        run.googleapis.com/container-dependencies: '{"proxy": ["frontend"]}'
        run.googleapis.com/vpc-access-connector: ${CLOUD_SQL_VPC_CONNECTOR}  # Cloud SQL に接続する VPC コネクタ
        run.googleapis.com/vpc-access-egress: "ALL_TRAFFIC"
    spec:
      serviceAccountName: ${SERVICE_ACCOUNT}
      containers:
        - name: proxy
          image: ${PROXY_IMAGE}
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
        - name: backend
          image: ${BACKEND_IMAGE}
          env:
            - name: SLF4PY_LOG_LEVEL
              value: "INFO"
            - name: OPENAPI_PREFIX
              value: ""
            - name: DI_PROFILE_ACTIVES
              value: "InMem,Stub"
            - name: DATABASE_URL
              valueFrom:  # Secret Manager
                secretKeyRef:
                  key: "latest"
                  name: "DATABASE_URL"
          startupProbe:
            httpGet:
              path: /health/check
              port: 8000
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
